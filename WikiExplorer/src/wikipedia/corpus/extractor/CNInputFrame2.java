/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package wikipedia.corpus.extractor;

import research.measures.CoreDensiteyCalculator;
import io.CNResultManager2;
import wikipedia.corpus.extractor.iwl.ExtractIWLinkCorpus;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.security.auth.login.FailedLoginException;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import jstat.data.Corpus;
import org.wikipedia.Wiki;
import org.wikipedia.Wiki.Revision;
import wikipedia.corpus.extractor.edits.WikiHistoryExtraction2;
import wikipedia.explorer.data.WikiNode;

/**
 *
 * @author kamir
 */
public class CNInputFrame2 extends javax.swing.JFrame {

    public static void setArgs(String[] args2) {
        lastARGS = args2;
        initArgs();
    }
    public static String[] lastARGS = null;

    private static void initArgs() {
        fram.jl1.setText(lastARGS[0]);
        fram.jl2.setText(lastARGS[1]);
        fram.jl3.setText(lastARGS[2]);
        fram.jl4.setText(lastARGS[3]);
        fram.jl5.setText(lastARGS[4]);
    }
    static CNInputFrame2 fram = null;

    /**
     * Creates new form CNInputFrame
     */
    public static CNInputFrame2 getCNIFRAME() {
        if (fram == null) {
            fram = new CNInputFrame2();
        }
        fram.initComponents();
        return fram;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        selectionTF = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jrbSEQ = new javax.swing.JRadioButton();
        jrbXML = new javax.swing.JRadioButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jl1 = new javax.swing.JLabel();
        jl2 = new javax.swing.JLabel();
        jl3 = new javax.swing.JLabel();
        jl4 = new javax.swing.JLabel();
        jl5 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        crawlMode = new javax.swing.JCheckBox();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WIKI relevance studies - METADATA Editor");

        jLabel1.setText("Studie : ");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CN lang", "CN pagename", "reload", "class"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));
        jScrollPane2.setViewportView(jTextArea1);

        jButton1.setText("Extract listfiles");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("new");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("load");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton3.setText("+");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("-");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        selectionTF.setText("0");

        jCheckBox1.setText("run on cluster");

        buttonGroup1.add(jrbSEQ);
        jrbSEQ.setText("SEQ-files");

        buttonGroup1.add(jrbXML);
        jrbXML.setSelected(true);
        jrbXML.setText("XML-files");

        jButton7.setText("Merge CN files");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Extract Access-TS (MR)");
        jButton8.setToolTipText("run MR on cluster");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Analyse Access-TS");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton11.setText("CHECK");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("create TXT statistic");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jl1.setText("...");

        jl2.setText("...");

        jl3.setText("...");

        jl4.setText("...");

        jl5.setText("...");

        jButton10.setText("Extract Edit-ES (WikiAPI)");
        jButton10.setToolTipText("run locally in some Threads ...");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        crawlMode.setText("crawl mode");
        crawlMode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                crawlModeFocusLost(evt);
            }
        });

        jButton13.setText("reload ...");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("calc core density");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jl5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                                    .addComponent(jl4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jl3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jl2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton14)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrbSEQ)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrbXML))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                            .addComponent(jl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(56, 56, 56)
                                                .addComponent(selectionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jButton12)
                                                .addGap(91, 91, 91)
                                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(crawlMode)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton10)))
                                .addContainerGap(186, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton6)
                            .addComponent(selectionTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1)
                            .addComponent(crawlMode))))
                .addGap(18, 18, 18)
                .addComponent(jl1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jl3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jl4))
                    .addComponent(jButton14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jButton1)
                    .addComponent(jButton12)
                    .addComponent(jButton9)
                    .addComponent(jButton13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton10))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbSEQ)
                    .addComponent(jrbXML))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        newStudie();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        saveStudie();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        loadStudieMetaData();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        Vector v = new Vector();
        v.add("");
        v.add("");
        dtm.addRow(v);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        ExtractIWLinkCorpus.crawlMode = this.crawlMode.isSelected();

        javax.swing.JOptionPane.showMessageDialog(this, "Extraktion der Daten wird etwas dauern ..." + ExtractIWLinkCorpus.crawlMode);

        WikiStudieMetaData sdm = initMetaData();

        String[] w = new String[sdm.wn.size()];
        String[] p = new String[sdm.wn.size()];

        int i = 0;
        for (WikiNode wn : sdm.wn) {
            w[i] = wn.wiki;
            p[i] = wn.page;
            i++;
        }

        try {

            int fm = 0;

            if (jrbXML.isSelected()) {
                fm = Corpus.mode_XML;
            } else if (jrbSEQ.isSelected()) {
                fm = Corpus.mode_SEQ;
            }

            FileWriter fw = new FileWriter(new File("./result_" + sdm.name + ".dat"));

            ExtractIWLinkCorpus.runFromGUITool(sdm.name, w, p, false, this.jCheckBox1.isSelected(), fw, fm);

        } catch (Exception ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }

        mergeListFiles(sdm);

    }//GEN-LAST:event_jButton1ActionPerformed
    int selection = 0;

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        selection = Integer.parseInt(selectionTF.getText());
        System.out.println(selection - 1);
        dtm.removeRow(selection - 1);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1PropertyChange

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        WikiStudieMetaData sdm = initMetaData();
        mergeListFiles(sdm);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // SUBMIT
        WikiStudieMetaData sdm = initMetaData();
        mergeListFilesAndSubmit(sdm);

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        openExtractedResults();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        WikiStudieMetaData sdm = initMetaData();
        testWikipages(sdm);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        WikiStudieMetaData sdm = initMetaData();
        _createNewTextStatisticFile(sdm, null);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        WikiStudieMetaData sdm = initMetaData();
        extractEditEventTS(sdm);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void crawlModeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_crawlModeFocusLost
        // TODO add your handling code here:
        ExtractIWLinkCorpus.crawlMode = this.crawlMode.isSelected();
    }//GEN-LAST:event_crawlModeFocusLost

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        ExtractIWLinkCorpus.crawlMode = true;

        javax.swing.JOptionPane.showMessageDialog(this, "Neu laden der Daten geht schneller ..." + ExtractIWLinkCorpus.crawlMode);

        WikiStudieMetaData sdm = initMetaData();

        String[] w = new String[sdm.wnRELOAD.size()];
        String[] p = new String[sdm.wnRELOAD.size()];

        int i = 0;
        for (WikiNode wn : sdm.wnRELOAD) {
            w[i] = wn.wiki;
            p[i] = wn.page;
            i++;
        }

        try {

            int fm = 0;

            if (jrbXML.isSelected()) {
                fm = Corpus.mode_XML;
            } else if (jrbSEQ.isSelected()) {
                fm = Corpus.mode_SEQ;
            }

            FileWriter fw = new FileWriter(new File("./result_" + sdm.name + ".dat"));

            ExtractIWLinkCorpus.runFromGUITool(sdm.name, w, p, false, this.jCheckBox1.isSelected(), fw, fm);

        } catch (Exception ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }

        mergeListFiles(sdm);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        WikiStudieMetaData sdm = initMetaData();
        File f = new File("/home/kamir/ANALYSIS/Wikipedia/core_dens_" + sdm.name.trim() + ".csv");
        try {
            BufferedWriter bw = new BufferedWriter(new FileWriter(f));

            for (WikiNode wn : sdm.getWn()) {
                CoreDensiteyCalculator.loadCoreDensity(wn.wiki, wn.page, bw);

            }
            bw.flush();
            bw.close();

        } catch (IOException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //javax.swing.JOptionPane.showMessageDialog(null, "Moin ..." );
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CNInputFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CNInputFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CNInputFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CNInputFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CNInputFrame2 f = CNInputFrame2.getCNIFRAME();
                ExtractIWLinkCorpus.crawlMode = true;
                f.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox crawlMode;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jl1;
    private javax.swing.JLabel jl2;
    private javax.swing.JLabel jl3;
    private javax.swing.JLabel jl4;
    private javax.swing.JLabel jl5;
    private javax.swing.JRadioButton jrbSEQ;
    private javax.swing.JRadioButton jrbXML;
    private javax.swing.JTextField selectionTF;
    // End of variables declaration//GEN-END:variables

    private void loadStudieMetaData() {
        File f1 = new File(".");
        JFileChooser jfc = new JFileChooser();
        jfc.setSelectedFile(f1);
        jfc.showOpenDialog(this);

        File f = jfc.getSelectedFile();
        try {
            WikiStudieMetaData smd = WikiStudieMetaData.load(f);
            initSMD(smd);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initSMD(WikiStudieMetaData smd) {

        this.jTextField1.setText(smd.name);

        this.jTextArea1.setText(smd.description);

        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

        int i = dtm.getRowCount();
        for (int j = 0; j < i; j++) {
            dtm.removeRow(0);
        }

        for (WikiNode w : smd.wn) {
            Vector v = new Vector();
            v.add(w.wiki);
            v.add(w.page);
            dtm.addRow(v);
        }

        this.jTable1.setModel(dtm);
    }

    private void newStudie() {
        WikiStudieMetaData smd = new WikiStudieMetaData();
        initSMD(smd);
    }

    private void saveStudie() {

        WikiStudieMetaData sdm = initMetaData();

        File f1 = new File(".");
        JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(f1);

        jfc.showSaveDialog(this);

        File f = jfc.getSelectedFile();
        try {
            sdm.store(f, sdm);
        } catch (Exception ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private WikiStudieMetaData initMetaData() {
        WikiStudieMetaData sdm = new WikiStudieMetaData();

        sdm.name = this.jTextField1.getText().trim();

        sdm.description = this.jTextArea1.getText();

        sdm.resetReloadBuffer();

        TableModel tm = this.jTable1.getModel();
        for (int i = 0; i < tm.getRowCount(); i++) {
            String w = (String) tm.getValueAt(i, 0);
            String p = (String) tm.getValueAt(i, 1);
            Boolean b = (Boolean) tm.getValueAt(i, 2);

            if (b != null) {
                if (b) {
                    sdm.addForReload(w, p);
                }
            }

            sdm.addNewNode(w, p);
        }
        return sdm;
    }

    private void mergeListFiles(WikiStudieMetaData sdm2) {
        try {
        
            String netn = sdm2.name;
            if ( netn.contains( "/" ) ) {
               netn = netn.replaceAll("/", "_");
            } 
            
            
            File f = new File("merged_listfile_" + netn + ".lst");

            System.out.println(">>> merged-list-file : " + f.getAbsolutePath());

            // merge listfiles now
            BufferedWriter bw = new BufferedWriter(new FileWriter("merged_listfile_" + netn + ".lst"));
            int j = 1;
            File in = null;
            for (WikiNode wn : sdm2.wn) {
                //  listfile_Congo_Examples_en_Hema_people.lst
                try {
                in = new File("listfile_" + netn + "_" + wn.wiki + "_" + wn.page + ".lst");
                System.out.println(in.getAbsolutePath());
                BufferedReader br = new BufferedReader(new FileReader(in));
                while (br.ready()) {
                    String line = br.readLine();
                    bw.write(j + "." + line + "\n");
                }
                bw.flush();
                j++;
                }
                catch( Exception ex) { 
                    System.out.println("******** >>> merged-list-file : " + in.getAbsolutePath());

                }
            }
            bw.flush();
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void mergeListFilesAndSubmit(WikiStudieMetaData sdm2) {
           String netn = sdm2.name;
            if ( netn.contains( "/" ) ) {
               netn = netn.replaceAll("/", "_");
            } 
            
            try {
            
         
            
            // merge listfiles now
            BufferedWriter bw = new BufferedWriter(new FileWriter("merged_listfile_" + netn + ".lst"));
            javax.swing.JOptionPane.showMessageDialog(this, "Submit: " + "merged_listfile_" + netn + ".lst");
            int j = 1;
            for (WikiNode wn : sdm2.wn) {
                //  listfile_Congo_Examples_en_Hema_people.lst
                File in = new File("listfile_" + netn + "_" + wn.wiki + "_" + wn.page + ".lst");
                BufferedReader br = new BufferedReader(new FileReader(in));
                while (br.ready()) {
                    String line = br.readLine();
                    bw.write(j + "." + line + "\n");
                }
                bw.flush();
                j++;
            }
            bw.flush();
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
//            ExtractIWLinkCorpus.submit(sdm2.name);
            ExtractIWLinkCorpus.submit(netn);
        } catch (IOException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void openExtractedResults() {
        System.out.println(" SEQ-File Viewer hier öffnen ... ");
        // ist aber in höherem LAYER !!! => REFACTORING
    }

    private void initTableModel(String string, String[] _page, String name) {

        this.jTextField1.setText(name);

        this.jTextArea1.setText("");

        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

        int i = dtm.getRowCount();
        for (int j = 0; j < i; j++) {
            dtm.removeRow(0);
        }

        for (String s : _page) {
            Vector v = new Vector();
            v.add(string);
            v.add(s);
            dtm.addRow(v);
        }

        this.jTable1.setModel(dtm);


    }

    private void testWikipages(WikiStudieMetaData sdm) {
        int errors = 0;

        for (WikiNode wn : sdm.getWn()) {
            Wiki wiki1 = new Wiki(wn.wiki + ".wikipedia.org");
            System.out.print("\n>[PAGE] : " + wn.page + "\n");
            Boolean o;
            try {
                o = (Boolean) wiki1.getPageInfo(wn.page).get("exists");
                // System.out.println( o );
                if (!o) {
                    errors++;
                    System.out.println(wn.page + " NOT available");

                }

            } catch (IOException ex) {
                Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(ex.getCause());
                errors++;

            }
        }
        System.out.println(">> " + errors + " errors detected.");
    }

    public static void _createNewTextStatisticFile(WikiStudieMetaData sdm, CNResultManager2 rm) {
        int errors = 0;

        System.out.println(">>> do some analysis now ... " + sdm.getWn().size());

        // der rm wird hier genutz, um später mal die Kenndaten alle zusammen zu tragen

        String p[] = new String[sdm.getWn().size()];
        String w[] = new String[sdm.getWn().size()];
        String ext[] = new String[sdm.getWn().size()];

        int i = 0;
        for (WikiNode wn : sdm.getWn()) {
            Wiki wiki1 = new Wiki(wn.wiki + ".wikipedia.org");
            ext[i] = "?";
            System.out.print("\n>[PAGE] : " + wn.page + "\n");
            Object o;
            try {
                o = wiki1.getPageInfo("exists");
                System.out.println(o);
                int kout = wiki1.getLinksOnPage(wn.page).length;

                // Revision first = wiki1.getFirstRevision(wn.page);
                // ext[i] = kout + "\t" + first.getTimestamp().getTime().toString();
                ext[i] = "-ext-";

            } catch (IOException ex) {
                Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(ex.getCause());
                errors++;

            }
            p[i] = wn.page;
            w[i] = wn.wiki;
            i++;
        }

        try {
            CorpusStatisticsMain2.createTextStatisticsResultFile(sdm.getName(), w, p, Corpus.mode_XML, ext, rm);
        } catch (IOException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(">> " + errors + " errors detected.");
        System.out.println(">>>> STATISTICS created.");

    }

    private void extractEditEventTS(WikiStudieMetaData sdm) {
        System.out.println(">>> Extract Edit-Event-TS : " + sdm.name);

        Calendar von = null;
        Calendar bis = null;


        von = new GregorianCalendar();
        von.clear();
        von.set(2009, 0, 1, 0, 0);

        bis = new java.util.GregorianCalendar();
        bis.clear();
        bis.set(2009, 3, 1, 0, 0);

        WikiHistoryExtraction2.setVon(von);
        WikiHistoryExtraction2.setBis(bis);

        System.out.println(">>>                   von : " + von.getTime().toString());
        System.out.println(">>>                   bis : " + bis.getTime().toString());

        boolean mode = true;
        try {
            wikipedia.corpus.extractor.edits.WikiHistoryExtraction2.run(sdm.wn, von, bis, mode);
        } catch (IOException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FailedLoginException ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CNInputFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
